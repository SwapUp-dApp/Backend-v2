{"version":3,"file":"swapController.js","names":["test","req","res","send","network","process","env","NETWORK","newSwap","metadata","body","response","db","swaps","create","JSON","stringify","init_address","trim","accept_address","init_sign","swap_mode","open_trade_id","trading_chain","status","SwapStatus","PENDING","offer_type","OfferType","PRIMARY","trade_id","swap_preferences","json","success","message","data","err","console","log","updateSwap","update","where","id","updateSwapStatus","tx","txn","notes","timestamp","getSwapDetails","query","swapId","swap","findByPk","walletId","parse","getPending","findAll","Op","and","or","address","history","sendSign","sign","swapController"],"sources":["../../../src/api/controllers/swapController.js"],"sourcesContent":["import db from \"../../database/models\";\r\nimport { Op } from \"sequelize\";\r\nimport { OfferType, SwapStatus } from '../utils/constants.js';\r\n\r\nfunction test(req, res) {\r\n    //testDb();\r\n    res.send({ network: process.env.NETWORK })\r\n}\r\n\r\nconst newSwap = async (req, res) => {\r\n    try {\r\n        var metadata = req.body.metadata\r\n\r\n        const response = await db.swaps.create({\r\n            metadata: JSON.stringify(metadata),\r\n            init_address: req.body.init_address.trim(),\r\n            accept_address: req.body.accept_address.trim(),\r\n            init_sign: req.body.init_sign.trim(),\r\n            \r\n            swap_mode: req.body.swap_mode,\r\n            open_trade_id: null,\r\n            trading_chain: req.body.trading_chain,                   \r\n            status: SwapStatus.PENDING,\r\n            offer_type: OfferType.PRIMARY,\r\n            trade_id : req.body.trade_id,\r\n            swap_preferences: null\r\n\r\n            \r\n        })\r\n        if (response) {\r\n            res.json({\r\n                success: true,\r\n                message: \"new_swap\",\r\n                data: response\r\n            })\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n        res.status(500).json({\r\n            success: false,\r\n            message: `***new_swap error -> ${err}`\r\n        })\r\n    }\r\n}\r\n\r\nconst updateSwap = async (req, res) => {\r\n    try {\r\n        var metadata = req.body.metadata\r\n\r\n        const response = await db.swaps.update(\r\n            {\r\n                metadata: JSON.stringify(metadata),\r\n               // status: 1, //1 is pending\r\n                init_address: req.body.init_address.trim(),\r\n                accept_address: req.body.accept_address.trim(),\r\n                init_sign: req.body.init_sign.trim(),\r\n\r\n                swap_mode: req.body.swap_mode,\r\n                open_trade_id: null,\r\n                trading_chain: req.body.trading_chain,                   \r\n                status: SwapStatus.PENDING,\r\n                offer_type: OfferType.PRIMARY,\r\n                trade_id : req.body.trade_id,\r\n                swap_preferences: null,\r\n\r\n            },\r\n            { where: { id: req.body.id } }\r\n        )\r\n\r\n        if (response) {\r\n            res.json({\r\n                success: true,\r\n                message: \"update_swap\",\r\n                data: response\r\n            })\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n        res.status(500).json({\r\n            success: false,\r\n            message: `***update_swap error -> ${err}`\r\n        })\r\n    }\r\n}\r\n\r\nconst updateSwapStatus = async (req, res) => {\r\n    try {\r\n        const response = await db.swaps.update(\r\n            {\r\n                status: req.body.status,\r\n                tx: \"\" + req.body.txn,\r\n                notes: \"\" + req.body.notes,\r\n                metadata: req.body.metadata,\r\n                timestamp: req.body.timestamp,\r\n\r\n                swap_mode: req.body.swap_mode,\r\n                open_trade_id: null,\r\n                trading_chain: req.body.trading_chain,                   \r\n                status: SwapStatus.PENDING,\r\n                offer_type: OfferType.PRIMARY,\r\n                trade_id : req.body.trade_id,\r\n                swap_preferences: null\r\n            },\r\n            { where: { id: req.body.id } }\r\n        )\r\n\r\n        if (response) {\r\n            res.json({\r\n                success: true,\r\n                message: \"update_swap_status\",\r\n                data: response\r\n            })\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n        res.status(500).json({\r\n            success: false,\r\n            message: `***update_swap_status -> ${err}`\r\n        })\r\n    }\r\n}\r\n\r\nconst getSwapDetails = async (req, res) => {\r\n    try {\r\n        console.log(req.query.swapId)\r\n        const swap = await db.swaps.findByPk(req.query.swapId)\r\n        if (swap) {\r\n            let walletId = req.query.walletId\r\n            const metadata = JSON.parse(swap.metadata)\r\n            console.log(metadata)\r\n            if (\r\n                swap.init_address !== walletId &&\r\n                swap.accept_address !== walletId\r\n            ) {\r\n                res.status(200).json({\r\n                    success: false,\r\n                    message: \"not authorized to view this swap\"\r\n                })\r\n            } else {\r\n                res.json({\r\n                    success: true,\r\n                    message: \"getSwapDetails\",\r\n                    data: swap\r\n                })\r\n            }\r\n        } else {\r\n            res.status(200).json({\r\n                success: false,\r\n                message: \"swap details not found\"\r\n            })\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n        res.status(500).json({\r\n            success: false,\r\n            message: `***getSwapDetails error -> ${err}`\r\n        })\r\n    }\r\n}\r\n\r\nconst getPending = async (req, res) => {\r\n    try {\r\n        const response = await db.swaps.findAll({\r\n            where: {\r\n                [Op.and]: {\r\n                    status: 1,\r\n                    [Op.or]: [\r\n                        { accept_address: req.query.address },\r\n                        { init_address: req.query.address }\r\n                    ]\r\n                }\r\n            }\r\n        })\r\n        if (response) {\r\n            res.json({\r\n                success: true,\r\n                message: \"get_pending\",\r\n                data: response\r\n            })\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n        res.status(500).json({\r\n            success: false,\r\n            message: `***get_pending error -> ${err}`\r\n        })\r\n    }\r\n}\r\n\r\nconst history = async (req, res) => {\r\n    try {\r\n        const response = await db.swaps.findAll({\r\n            //attributes: [\"createdAt\", \"status\"],\r\n            where: {\r\n                [Op.or]: [\r\n                    { accept_address: req.query.address },\r\n                    { init_address: req.query.address }\r\n                ]\r\n            }\r\n        })\r\n        if (response) {\r\n            res.json({\r\n                success: true,\r\n                message: \"history\",\r\n                data: response\r\n            })\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n        res.status(500).json({\r\n            success: false,\r\n            message: `***history error -> ${err}`\r\n        })\r\n    }\r\n}\r\n\r\nconst sendSign = async (req, res) => {\r\n    try {\r\n        const response = await db.swaps.update(\r\n            { init_sign: req.body.sign },\r\n            { where: { init_address: req.body.address } }\r\n        )\r\n        if (response) {\r\n            res.json({\r\n                success: true,\r\n                message: \"send_sign\",\r\n                data: response\r\n            })\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n        res.status(500).json({\r\n            success: false,\r\n            message: `***send_sign error -> ${err}`\r\n        })\r\n    }\r\n}\r\n\r\nexport const swapController = {\r\n    test,\r\n    newSwap,\r\n    updateSwap,\r\n    updateSwapStatus,\r\n    getPending,\r\n    history,\r\n    sendSign,\r\n    getSwapDetails\r\n}\r\n"],"mappings":"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"}