{"version":3,"file":"nftController.js","names":["test","req","res","send","network","process","env","NETWORK","alchemy","getAlchemy","core","resolveName","then","console","log","list_all_wallet_nfts","nfts","nftsIterable","nft","getNftsForOwnerIterator","params","walletId","push","err","status","json","success","message","register_a_wallet","nftController"],"sources":["../../../src/api/controllers/nftController.js"],"sourcesContent":["import { getAlchemy } from \"../../utils/alchemy.js\"\r\n//import { testDb } from \"../models/test.js\";\r\n\r\nfunction test(req, res) {\r\n    //testDb();\r\n    res.send({ network: process.env.NETWORK })\r\n    let alchemy = getAlchemy()\r\n    alchemy.core.resolveName(\"xyz.3dot0.eth\").then(console.log);\r\n}\r\n\r\n// returns all the nfts owned by a wallet address\r\nasync function list_all_wallet_nfts(req, res) {\r\n    try {\r\n        let alchemy = getAlchemy()\r\n        // Print all NFTs returned in the response:\r\n        let nfts = [];\r\n        // Get the async iterable for the owner's NFTs.\r\n        const nftsIterable = alchemy.nft.getNftsForOwnerIterator(req.params.walletId);\r\n\r\n        // Iterate over the NFTs and add them to the nfts array.\r\n        for await (const nft of nftsIterable) {\r\n            nfts.push(nft);\r\n        }\r\n        //let nfts = await alchemy.nft.getNftsForOwner(req.params.walletId)\r\n        console.log(nfts)\r\n        res.send(nfts)\r\n    } catch (err) {\r\n        console.log(err)\r\n        res.status(500).json({\r\n            success: false,\r\n            message: `***list_all_wallet_nfts error -> ${err}`\r\n        })\r\n    }\r\n}\r\n\r\n///register a new wallet account in the system\r\nasync function register_a_wallet(req, res) {\r\n    //\r\n}\r\n\r\nexport const nftController = {\r\n    test,\r\n    list_all_wallet_nfts,\r\n    register_a_wallet\r\n}\r\n"],"mappings":";;;;;;AAAA;AACA;;AAEA,SAASA,IAAI,CAACC,GAAG,EAAEC,GAAG,EAAE;EACpB;EACAA,GAAG,CAACC,IAAI,CAAC;IAAEC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC;EAAQ,CAAC,CAAC;EAC1C,IAAIC,OAAO,GAAG,IAAAC,mBAAU,GAAE;EAC1BD,OAAO,CAACE,IAAI,CAACC,WAAW,CAAC,eAAe,CAAC,CAACC,IAAI,CAACC,OAAO,CAACC,GAAG,CAAC;AAC/D;;AAEA;AACA,eAAeC,oBAAoB,CAACd,GAAG,EAAEC,GAAG,EAAE;EAC1C,IAAI;IACA,IAAIM,OAAO,GAAG,IAAAC,mBAAU,GAAE;IAC1B;IACA,IAAIO,IAAI,GAAG,EAAE;IACb;IACA,MAAMC,YAAY,GAAGT,OAAO,CAACU,GAAG,CAACC,uBAAuB,CAAClB,GAAG,CAACmB,MAAM,CAACC,QAAQ,CAAC;;IAE7E;IACA,WAAW,MAAMH,GAAG,IAAID,YAAY,EAAE;MAClCD,IAAI,CAACM,IAAI,CAACJ,GAAG,CAAC;IAClB;IACA;IACAL,OAAO,CAACC,GAAG,CAACE,IAAI,CAAC;IACjBd,GAAG,CAACC,IAAI,CAACa,IAAI,CAAC;EAClB,CAAC,CAAC,OAAOO,GAAG,EAAE;IACVV,OAAO,CAACC,GAAG,CAACS,GAAG,CAAC;IAChBrB,GAAG,CAACsB,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MACjBC,OAAO,EAAE,KAAK;MACdC,OAAO,EAAG,oCAAmCJ,GAAI;IACrD,CAAC,CAAC;EACN;AACJ;;AAEA;AACA,eAAeK,iBAAiB,CAAC3B,GAAG,EAAEC,GAAG,EAAE;EACvC;AAAA;AAGG,MAAM2B,aAAa,GAAG;EACzB7B,IAAI;EACJe,oBAAoB;EACpBa;AACJ,CAAC;AAAA"}