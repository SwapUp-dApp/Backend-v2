{"version":3,"file":"walletController.js","names":["list_all_wallets","req","res","getdata","db","users","findAll","body","json","success","message","data","err","console","log","status","create_wallet","walletAddress","checkdata","findOne","where","wallet","createdata","create","walletController"],"sources":["../../../src/api/controllers/walletController.js"],"sourcesContent":["import db from \"../../database/models\";\r\n\r\nasync function list_all_wallets(req, res) {\r\n    try {\r\n        let getdata = await db.users.findAll(req.body);\r\n        if (getdata) {\r\n            res.json({\r\n                success: true,\r\n                message: \"list_all_wallets\",\r\n                data: getdata\r\n            });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(500).json({\r\n            success: false,\r\n            message: `***list_all_wallets -> ${err}`\r\n        });\r\n    }\r\n}\r\n\r\nasync function create_wallet(req, res) {\r\n    let walletAddress = req.body.walletAddress;\r\n    try {\r\n        let checkdata = await db.users.findOne({ where: { wallet: walletAddress } });\r\n        if (checkdata) {\r\n            res.json({\r\n                message: `create_wallet: ${walletAddress} already exists`,\r\n                data: checkdata\r\n            });\r\n        } else {\r\n            let createdata = await db.users.create({ wallet: walletAddress });\r\n            if (createdata) {\r\n                res.json({\r\n                    success: true,\r\n                    message: `create_wallet: ${walletAddress}`,\r\n                    data: createdata\r\n                });\r\n            }\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(500).json({\r\n            success: false,\r\n            message: `create_wallet: ${walletAddress} -> ${err}`\r\n        });\r\n    }\r\n}\r\n\r\nexport const walletController = { list_all_wallets, create_wallet };"],"mappings":";;;;;;AAAA;AAAuC;AAEvC,eAAeA,gBAAgB,CAACC,GAAG,EAAEC,GAAG,EAAE;EACtC,IAAI;IACA,IAAIC,OAAO,GAAG,MAAMC,eAAE,CAACC,KAAK,CAACC,OAAO,CAACL,GAAG,CAACM,IAAI,CAAC;IAC9C,IAAIJ,OAAO,EAAE;MACTD,GAAG,CAACM,IAAI,CAAC;QACLC,OAAO,EAAE,IAAI;QACbC,OAAO,EAAE,kBAAkB;QAC3BC,IAAI,EAAER;MACV,CAAC,CAAC;IACN;EACJ,CAAC,CAAC,OAAOS,GAAG,EAAE;IACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAChBV,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACP,IAAI,CAAC;MACjBC,OAAO,EAAE,KAAK;MACdC,OAAO,EAAG,0BAAyBE,GAAI;IAC3C,CAAC,CAAC;EACN;AACJ;AAEA,eAAeI,aAAa,CAACf,GAAG,EAAEC,GAAG,EAAE;EACnC,IAAIe,aAAa,GAAGhB,GAAG,CAACM,IAAI,CAACU,aAAa;EAC1C,IAAI;IACA,IAAIC,SAAS,GAAG,MAAMd,eAAE,CAACC,KAAK,CAACc,OAAO,CAAC;MAAEC,KAAK,EAAE;QAAEC,MAAM,EAAEJ;MAAc;IAAE,CAAC,CAAC;IAC5E,IAAIC,SAAS,EAAE;MACXhB,GAAG,CAACM,IAAI,CAAC;QACLE,OAAO,EAAG,kBAAiBO,aAAc,iBAAgB;QACzDN,IAAI,EAAEO;MACV,CAAC,CAAC;IACN,CAAC,MAAM;MACH,IAAII,UAAU,GAAG,MAAMlB,eAAE,CAACC,KAAK,CAACkB,MAAM,CAAC;QAAEF,MAAM,EAAEJ;MAAc,CAAC,CAAC;MACjE,IAAIK,UAAU,EAAE;QACZpB,GAAG,CAACM,IAAI,CAAC;UACLC,OAAO,EAAE,IAAI;UACbC,OAAO,EAAG,kBAAiBO,aAAc,EAAC;UAC1CN,IAAI,EAAEW;QACV,CAAC,CAAC;MACN;IACJ;EACJ,CAAC,CAAC,OAAOV,GAAG,EAAE;IACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAChBV,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACP,IAAI,CAAC;MACjBC,OAAO,EAAE,KAAK;MACdC,OAAO,EAAG,kBAAiBO,aAAc,OAAML,GAAI;IACvD,CAAC,CAAC;EACN;AACJ;AAEO,MAAMY,gBAAgB,GAAG;EAAExB,gBAAgB;EAAEgB;AAAc,CAAC;AAAC"}